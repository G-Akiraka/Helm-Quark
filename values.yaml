################################
############ 共享配置 ############
################################
shareConfig:
  # 副本数量
  replicaCount: 1
  # 日志共享挂载
  extraVolumes: {}
    # - name: akiraka-logs
    #   emptyDir: {}
  # 节点选择
  nodeSelector: {}
    # type: manager
  # 容忍节点
  tolerations: []
    # - operator: Exists
  # 亲和性
  affinity: {}
  # 私有仓库秘钥
  imagePullmi: []
  # 全局名称
  nameOverride: ""
  # 全局名称
  fullnameOverride: ""
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: {}
  # 部署策略，默认滚动更新，开启重新部署
  strategy:
    enable: false
    type: Recreate

################################
############ 域名配置 ############
################################
ingress:
  enabled: true
  certManager: false
  # 访问域名
  hostname: tomcat.akiraka.net
  # 访问路径
  path: /
  # 额外访问路径
  extraPath: []
    # path: /
  # 重写开启 默认 /$1
  rewriteTarget: false
  # 重写片段 默认关闭 规则下面配置
  rewriteSnippet: false
  # 片段规则自己定义，下面这个是示范
  snippetRule: rewrite /service/(.*)  /$1 break;
  # 注解
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    # 只在配置了HTTPS之后才会生效进行跳转
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # 强制跳转到https，不论是否配置了https证书
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # 是否启用正则表达式
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "256m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "10m"
  # extraHosts:
  # - name: tomcat.akiraka.net
  #   path: /
  tls: false
  # extraTls:
  # - hosts:
  #   - tomcat.akiraka.net
  #   secretName: tomcat.akiraka.net
  secrets: []
  # - name: tomcat.akiraka.net
  #   key:
  #   certificate:

################################
####### 自动绑定 pvc 与 pv #######
################################
persistence:
  enabled: false
  size: "8Gi"
  volumeMode: Filesystem
  accessMode: ReadWriteOnce
  storageClass: "aka-nfs"
  # 回收策略
  reclaimPolicy: Retain
  nfsPath: /data/NFS
  nfsServer: 192.168.6.251

################################
########### 应用配置 ###########
################################
customApp:
  enabled: ture
  # 应用名称
  appName: tomcat
  image:
    repository: tomcat
    tag: 8.5.51
    pullPolicy: Always
  # svc 设置
  service:
    type: ClusterIP
    port: 8080
    # externalIPs: ""
  # 额外端口
  extraPorts: []
    # - name: port-1
    #   port: 2323
    #   nodePort: 32323
  # 提供 Dubbo 服务端口
  dubboPort:
    enabled: false
    port: 20880
  # 提供 Dubbo 环境变量
  dubboPortEnv: true
  # 就绪检查
  readinessProbe:
    enabled: false
    # 不健康阈值,允许失败次数
    failureThreshold: 3
    # 延迟探测时间（秒）
    initialDelaySeconds: 30
    # 执行探测频率（秒）
    periodSeconds: 10
    # 超时时间（秒）
    timeoutSeconds: 3
  # 存活检查
  livenessProbe:
    enabled: false
    # 不健康阈值,允许失败次数
    failureThreshold: 3
    # 延迟探测时间（秒）
    initialDelaySeconds: 30
    # 执行探测频率（秒）
    periodSeconds: 60
    # 超时时间（秒）
    timeoutSeconds: 5
  # 将日志目录共享给 Filebeat 采集日志
  extraVolumeMounts: {}
    # - name: akiraka-logs
    #   mountPath: /usr/local/tomcat/logs
    #   readOnly: false
  # 性能设置是否启用
  resourcesSwitch: false
  # 性能设置
  resources:
    requests:
      cpu: 500m
      memory: 2048Mi
    limits:
      cpu: 500m
      memory: 2048Mi
  # 安全上下文
  securityContext: {}
    # runAsUser: 0
    # privileged: false
  # args 配置
  extraArgs: {}
    # ding.profile: webhook1=https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxxxxxxxxxxxxxxxxxxx
  # 容器环境变量
  containerEnv: []
    # - name: http_proxy
    #   value: "http://192.168.64.1:3128"
  # 自定义 filebeat.yaml 配置
  customAppConfig:
    # 目录位置
    mountPath: "/etc/nginx/conf.d/"
    # 文件名称
    subPath: default.conf
    readOnly: false
    # 内容
    appConfig: {}
      # default.conf: |
      #   server {
      #     listen 80;
      #     listen 8080;
      #     server_name _;
      #     root $webroot;
      #     set $webroot '/usr/share/nginx/html';
      #     index index.html index.htm index.php;
      #     # access_log /data/wwwlogs/access_nginx.log aka_logs;
      #     location / {
      #       # HTML5 History 模式
      #       try_files $uri $uri/ /index.html;
      #     }
      #     location /test {
      #       proxy_pass http://127.0.0.1:8888;
      #       proxy_http_version 1.1;
      #       proxy_set_header Host $http_host;
      #       proxy_set_header X-Real-IP $remote_addr;
      #       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #       proxy_set_header Connection "upgrade";
      #     }
      #   }

################################
######### Filebeat 配置 #########
###############################
filebeat:
  # 是否启用 filebeat
  enabled: false
  # 应用名称
  appName: filebeat
  image:
    repository: elastic/filebeat
    tag: 7.6.1
    pullPolicy: IfNotPresent
  # 自定义 filebeat.yaml 配置
  filebeatConfig: {}
    # filebeat.yml: |
    #   filebeat.inputs:
    #   - type: log
    #     paths:
    #       - /filebeat/logs/catalina.out
    #     fields:
    #       app: www
    #       type: tomcat-catalina
    #     # multiline:
    #     #   pattern: '^\['
    #     #   negate: true
    #     #   match: after
    #   output.redis:
    #     hosts: ["redis-master.manager.svc.cluster.local"]
    #     password: "passw"
    #     key: "tomcat"
    #     db: 2
    #     timeout: 5
  # 额外环境变量
  extraEnvs: []
    # - name: 'ELASTICSEARCH_USERNAME'
    #   valueFrom:
    #     secretKeyRef:
    #       name: elastic-credentials
    #       key: username
    # - name: 'ELASTICSEARCH_PASSWORD'
    #   valueFrom:
    #     secretKeyRef:
    #       name: elastic-credentials
    #       key: password
  # 将日志挂载过来方便采集日志
  extraVolumeMounts: {}
    # - name: akiraka-logs
    #   mountPath: /filebeat/logs
    #   readOnly: true
  # 性能设置
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 100m
      memory: 256Mi
  # 安全上下文
  securityContext:
    runAsUser: 0
    privileged: false
  # 判断容器是否存活
  livenessProbe:
    enabled: false
    exec:
      command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash -e
          curl --fail 127.0.0.1:5066
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
  # 判断容器是否启动完成
  readinessProbe:
    enabled: false
    exec:
      command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash -e
          filebeat test output
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5